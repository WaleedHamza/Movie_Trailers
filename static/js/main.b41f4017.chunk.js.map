{"version":3,"sources":["Components/VideoPlayer/VideoPlayer.js","Components/Card/MovieCard.js","Components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["VideoPlayer","props","t","trailers","console","log","videos","forEach","item","index","URL","key","trailer","url","controls","width","height","push","MovieCard","populateModal","id","process","axios","get","then","res","results","data","clips","setState","state","visible","toggleModal","bind","this","movie","window","location","href","className","Card","bsPrefix","Img","variant","src","backdrop","alt","onError","e","target","onerror","Figure","Image","poster","onClick","preventDefault","getTrailer","Body","Title","title","Text","overview","Footer","release_date","Button","onOk","onCancel","Component","Search","handleOk","modal","handleCancel","loading","noData","movies","titleInput","onChange","LATEST","movieItems","poster_path","backdrop_path","film","stopPropagation","nativeEvent","stopImmediatePropagation","API_KEY","input","value","TMDB","status","catch","err","content","size","Jumbotron","InputGroup","FormControl","aria-label","aria-describedby","type","name","placeholder","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b41f4017.chunk.js","sourcesContent":["import React from 'react'\nimport ReactPlayer from 'react-player'\nimport { Carousel } from 'antd';\n\nfunction VideoPlayer (props) {\n    let t = props.trailers\n    console.log('======',t);\n    var videos= []\n    t.forEach( (item, index ) => {\n        console.log('-----------------inside for each video player ', item);\n        var URL = `https://www.youtube.com/watch?v=${item.key}`\n        const trailer = <ReactPlayer url={URL} controls key={index} width='100%' height=\"70vh\"/>\n        videos.push(trailer);\n    })\n\n\n\nreturn  <>\n<Carousel >{videos}</Carousel></>\n  \n}\n\nexport default VideoPlayer;\n\n","import React, {Component} from 'react'\nimport axios from 'axios';\nimport {Card, Figure, Button} from 'react-bootstrap';\nimport { Modal, Empty } from 'antd';\nimport './MovieCard.css'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\n\n\nexport default class MovieCard extends Component {\n\n    constructor(){\n        super();\n            this.state = {\n                trailers : [],\n                visible: false,\n                // keys:[],\n            }\n            this.populateModal= this.populateModal.bind(this);\n            this.toggleModal= this.toggleModal.bind(this);\n    }\n    visitHomePage() {\n        const url = 'https://www.themoviedb.org/movie/' + this.props.movie.id\n        window.location.href = url\n    }\n\n    populateModal = (id) => {\n    let URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&append_to_response=videos`;\n    axios\n        .get(URL)\n        .then((res) => {\n            var results = res.data.videos.results\n            var clips = []\n            results.forEach((item) => {\n                clips.push(item);\n            });\n            this.setState({trailers: clips})\n            console.log('this is the trailers state', this.state.trailers);\n        })\n    this.setState({visible: true});\n};\n\n      toggleModal =()=> {\n          this.setState({visible: !this.state.visible, trailers: [] });\n      }\n    \n\n    render() {\n        var movie = this.props.movie\n        return (\n            <div className='container' key={movie.id}>\n                <Card bsPrefix='card'>\n                    <div className='card-img'>\n                        <Card.Img\n                            bsPrefix='card-img'\n                            variant=\"top\"\n                            src={movie.backdrop}\n                            alt='movie_backdrop'\n                            onError=\n                            {(e)=>{e.target.onerror = null ; e.target.src=\"https://i.stack.imgur.com/GNhxO.png\"}}/>\n                    </div>\n                    <Figure bsPrefix='poster'>\n                        <Figure.Image\n                            bsPrefix='figure-img'\n                            width={171}\n                            height={240}\n                            alt=\"171x180\"\n                            src={movie.poster}\n                            onClick={(e)=>{e.preventDefault(); \n                                console.log(movie.id)\n                                this.getTrailer(movie.id)}}\n                            onError=\n                            {(e)=>{e.target.onerror = null ; e.target.src=\"404.svg\"}}/>\n                    </Figure>\n                    <Card.Body className='movie_details' key={movie.id}>\n                        <Card.Title><h1>{movie.title}</h1></Card.Title>\n                        <Card.Text>{movie.overview}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer bsPrefix='card-footer'>\n                        <small className=\"text-muted\">Release Date: {movie.release_date}</small>\n                        <Button\n                            variant=\"link\"\n                            onClick={()=>{this.populateModal(movie.id)}}>Watch Trailer</Button>\n                            \n                            {/* <Button\n                            variant=\"link\"\n                            onClick={this\n                            .visitHomePage\n                            .bind(this)}>More Info</Button> */}\n                    </Card.Footer>\n                </Card>\n                <Modal\n                width='70vw'\n          visible={this.state.visible}\n          onOk={this.toggleModal}\n          onCancel={this.toggleModal}\n          toggleModal={this.toggleModal}\n          >\n        <VideoPlayer trailers = {this.state.trailers}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport ReactPlayer from 'react-player'\nimport { Jumbotron, InputGroup, FormControl } from 'react-bootstrap';\nimport { Modal, Button, Icon, Spin } from 'antd';\nimport MovieCard from'../Card/MovieCard'\nimport './search.css'\nimport 'antd/dist/antd.css';\n\n class Search extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      loading: false,\n      noData: false,\n      movies:[],\n      titleInput: ''\n    }\n    this.onChange = this.onChange.bind(this)\n  }\n\n  componentDidMount() {\n    const API_KEY = process.env.REACT_APP_TMDB_API_KEY\n    const LATEST =  `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`;\n       axios.get(LATEST)\n        .then( (res) => {\n          var movieItems=[]\n          var results = res.data.results\n          results.forEach((movie) => {\n            movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n            movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n            const film= <MovieCard movie= {movie} key={movie.id}/>\n              movieItems.push(film)\n            })\n            this.setState({movies: movieItems})\n        });\n}\n\n\nhandleOk = e => {\n  this.setState({ modal: { visible: false } });\n};\n\nhandleCancel = e => {\n  this.setState({ modal: { visible: false} });\n};\n\n  onChange(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n    const input = e.target.value;\n    this.setState({titleInput: input});\n    const LATEST =  `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}&language=en-US`;\n    const TMDB = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${input}&page=1&include_adult=false`;\n\n      if(input === \"\"){\n        axios.get(LATEST)\n        .then((res)=> {\n          var movieItems=[]\n        var results = res.data.results\n        results.forEach((movie) => {\n          movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n          movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n          const film= <MovieCard movie= {movie} key={movie.id}/>\n            movieItems.push(film)\n          })\n          this.setState({movies: movieItems})\n        })\n      }else{\n      axios.get(TMDB)\n      .then( (res) => {\n        if( res.data.results >= 0){\n          this.setState({loading:false})\n          console.log('Looks like there was a problem. Status Code: ' +\n          res.status);\n          this.setState({noData: true})\n        return;\n        }\n       var movieItems=[]\n        var results = res.data.results\n        results.forEach((movie) => {\n          movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n          movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n          const film= <MovieCard movie= {movie} key={movie.id}/>\n            movieItems.push(film)\n          })\n          this.setState({movies: movieItems})\n          })\n      .catch((err) => {\n              console.log(err)\n          });\n}\n  }\n\n  render() {\n    let content = this.state.loading ? <div className=\"loadingContainer\"><Spin size=\"large\" className=\"spinner\" /></div> : this.state.movies;\n    return (\n      <div>\n<Jumbotron bsPrefix='jumbotron'>\n  <h1 className='title'>Welcome to the MovieDB</h1>\n  <h3 className='intoduction'>\n    Search the MovieDB for your favorite movies, find out more information and watch trailers\n  </h3>\n  <InputGroup className=\"mb-3\">\n    <FormControl bsPrefix='searchInput'\n      aria-label=\"Default\"\n      aria-describedby=\"inputGroup-sizing-default\"\n      className='searchInput' type='text' name=\"searchMovie\" value={this.state.titleInput} onChange={this.onChange} onClick={(e)=>{e.preventDefault()}} placeholder=\" Search...\"\n    />\n  </InputGroup>\n</Jumbotron>\n<div>\n  {content}\n</div>\n       \n      </div>\n    );\n  }\n}\n\n\nexport default Search;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './Components/Search/Search.js'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1>Movie Search App</h1>\n        <img  alt= \"powers-by-tmdb\" width= \"50\" src =\"powered-by-rectangle-green.svg\" />\n        </header>\n        <Search />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}