{"version":3,"sources":["Components/VideoPlayer/VideoPlayer.js","Components/Card/MovieCard.js","Components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["VideoPlayer","props","t","trailers","videos","forEach","item","index","URL","key","trailer","url","controls","id","width","height","push","MovieCard","populateModal","process","axios","get","then","res","results","data","console","log","clips","setState","visible","toggleModal","state","bind","this","movie","window","location","href","className","Card","bsPrefix","Header","title","release_date","Body","Button","variant","onClick","visitHomePage","Text","overview","Img","src","poster","alt","onError","e","target","onerror","Footer","footer","closable","destroyOnClose","onOk","onCancel","Component","Search","handleOk","modal","handleCancel","loading","noData","movies","titleInput","onChange","LATEST","movieItems","poster_path","backdrop","backdrop_path","film","stopPropagation","preventDefault","nativeEvent","stopImmediatePropagation","API_KEY","input","value","TMDB","status","catch","err","content","size","Jumbotron","InputGroup","FormControl","aria-label","aria-describedby","type","name","placeholder","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.793687ea.chunk.js","sourcesContent":["import React from 'react'\nimport ReactPlayer from 'react-player'\n\nfunction VideoPlayer(props) {\n    let t = props.trailers\n    var videos = []\n    t.forEach((item, index) => {\n        var URL = `https://www.youtube.com/watch?v=${item.key}&enablejsapi=1`\n        const trailer = <ReactPlayer url={URL} controls key={index} id={item.id} width='100%' height='500px'/>\n        videos.push(trailer);\n    })\n\n    return  <>{videos[0]}</> \n  \n}\n\nexport default VideoPlayer;","import React, {Component} from 'react'\nimport axios from 'axios';\nimport {Card, Button} from 'react-bootstrap';\nimport {Modal} from 'antd';\nimport './MovieCard.css'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\n\nexport default class MovieCard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            trailers: [],\n            visible: false\n        }\n        this.populateModal = this\n            .populateModal\n            .bind(this);\n        this.toggleModal = this\n            .toggleModal\n            .bind(this);\n    }\n    visitHomePage() {\n        const url = 'https://www.themoviedb.org/movie/' + this.props.movie.id\n        window.location.href = url\n    }\n\n    populateModal = (id) => {\n        let URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&append_to_response=videos`;\n        axios\n            .get(URL)\n            .then((res) => {\n                var results = res.data.videos.results\n                console.log(results)\n                var clips = []\n                results.forEach((item) => {\n                    clips.push(item);\n                });\n                this.setState({trailers: clips})\n            })\n        this.setState({visible: true});\n    };\n\n    toggleModal = () => {\n        this.setState({\n            visible: !this.state.visible,\n            trailers: []\n        });\n    }\n\n    render() {\n var movie = this.props.movie\n        return (\n            <div className=\"cardsConainer\">\n                <Card key={movie.id} bsPrefix='card'>\n                    <Card.Header bsPrefix='cardHeader'>\n                        <h3>{movie.title}</h3>\n                        <h4 className=\"text-muted\">Released: {movie.release_date}</h4>\n                    </Card.Header>\n                    <Card.Body className='cardBody'>\n                        <div className='cardOverlay'>\n                            <div className='actionBtn'>\n                                <Button\n                                    variant=\"link\"\n                                    onClick={() => {\n                                    this.populateModal(movie.id)\n                                }}>\n                                    <span className='glyphicon glyphicon-play-circle'></span>\n                                </Button>\n                                <Button variant=\"link\" onClick={this\n                                    .visitHomePage.bind(this)}>\n                                    <span className=\"glyphicon glyphicon-info-sign\"></span>\n                                </Button>\n                            </div>\n                            <Card.Text bsPrefix='cardText'>\n                                {movie.overview}\n                            </Card.Text>\n                        </div>\n                        <Card.Img className='cardImage' variant=\"top\" src={movie.poster} alt='movie_backdrop'\n                            onError=\n                            {(e)=>{e.target.onerror = null ; e.target.src=\"http://www.2queue.com/wp-content/uploads/tdomf/4299/movie-poster-coming-soon.png\"}}/>\n                    </Card.Body>\n                    <Card.Footer bsPrefix='cardFooter'></Card.Footer>\n                </Card>\n                <Modal\n                    footer={null}\n                    closable= {false}\n                    destroyOnClose={true}\n                    width='70vw'\n                    visible={this.state.visible}\n                    onOk={this.toggleModal}\n                    onCancel={this.toggleModal}\n                    toggleModal={this.toggleModal}>\n                    <VideoPlayer trailers={this.state.trailers}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Jumbotron, InputGroup, FormControl } from 'react-bootstrap';\nimport { Spin } from 'antd';\nimport MovieCard from'../Card/MovieCard'\nimport './search.css'\nimport 'antd/dist/antd.css';\n\n class Search extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      loading: false,\n      noData: false,\n      movies:[],\n      titleInput: ''\n    }\n    this.onChange = this.onChange.bind(this)\n  }\n\n  componentDidMount() {\n    const API_KEY = process.env.REACT_APP_TMDB_API_KEY\n    const LATEST =  `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`;\n       axios.get(LATEST)\n        .then( (res) => {\n          var movieItems=[]\n          var results = res.data.results\n          results.forEach((movie) => {\n            movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n            movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n            const film= <MovieCard movie= {movie} key={movie.id}/>\n              movieItems.push(film)\n            })\n            this.setState({movies: movieItems})\n        });\n}\n\n\nhandleOk = e => {\n  this.setState({ modal: { visible: false } });\n};\n\nhandleCancel = e => {\n  this.setState({ modal: { visible: false} });\n};\n\n  onChange(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n    const input = e.target.value;\n    this.setState({titleInput: input});\n    const LATEST =  `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}&language=en-US`;\n    const TMDB = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${input}&page=1&include_adult=false`;\n\n      if(input === null){\n        axios.get(LATEST)\n        .then((res)=> {\n          var movieItems=[]\n        var results = res.data.results\n        results.forEach((movie) => {\n          movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n          movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n          const film= <MovieCard movie= {movie} key={movie.id}/>\n            movieItems.push(film)\n          })\n          this.setState({movies: movieItems})\n        })\n      }else{\n      axios.get(TMDB)\n      .then( (res) => {\n        if( res.data.results >= 0){\n          this.setState({loading:false})\n          console.log('Looks like there was a problem. Status Code: ' +\n          res.status);\n          this.setState({noData: true})\n        return;\n        }\n       var movieItems=[]\n        var results = res.data.results\n        results.forEach((movie) => {\n          movie.poster='https://image.tmdb.org/t/p/original' + movie.poster_path\n          movie.backdrop='https://image.tmdb.org/t/p/original' + movie.backdrop_path\n          const film= <MovieCard movie= {movie} key={movie.id}/>\n            movieItems.push(film)\n          })\n          this.setState({movies: movieItems})\n          })\n      .catch((err) => {\n              console.log(err)\n          });\n}\n  }\n\n  render() {\n    let content = this.state.loading ? <div className=\"loadingContainer\"><Spin size=\"large\" className=\"spinner\" /></div> : this.state.movies;\n    return (\n      <div>\n<Jumbotron bsPrefix='jumbotron'>\n  <InputGroup className=\"mb-3\">\n    <FormControl bsPrefix='searchInput'\n      aria-label=\"Default\"\n      aria-describedby=\"inputGroup-sizing-default\"\n      className='searchInput' type='text' name=\"searchMovie\" value={this.state.titleInput} onChange={this.onChange} onClick={(e)=>{e.preventDefault()}} placeholder=\" Search...\"\n    />\n  </InputGroup>\n</Jumbotron>\n<div className='contentContainer'>\n  {content}\n</div>\n      </div>\n    );\n  }\n};\n\n\nexport default Search;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './Components/Search/Search.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1>Movie Search App</h1>\n        <img  alt= \"powers-by-tmdb\" width= \"50\" src =\"powered-by-rectangle-green.svg\" />\n        </header>\n        <Search />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}